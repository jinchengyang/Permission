<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--
 ~
 ~ @author [ your email ]
 ~ @date 2018-06-25 16:10:00
 ~ Created by CodeGen .
-->

<mapper namespace="com.nepxion.permission.core.dao.RolePermissionDao">
    <resultMap id="RolePermissionMap" type="RolePermission">
        <id property="id" column="id"/>
        <result property="tenantId" column="tenant_id"/>
        <result property="roleId" column="role_id"/>
        <result property="permissionId" column="permission_id"/>
        <result property="extraJson" column="extra_json"/>
        <result property="createdBy" column="created_by"/>
        <result property="options" column="options"/>
        <result property="isDeleted" column="is_deleted"/>
        <result property="createdAt" column="created_at"/>
        <result property="updatedAt" column="updated_at"/>
    </resultMap>

    <sql id="table_name">
        role_permission
    </sql>

    <sql id="columns_all">
        id,
        <include refid="columns_exclude_id"/>
    </sql>

    <sql id="columns_exclude_id">
        `tenant_id`, `role_id`, `permission_id`, `extra_json`, `created_by`, `options`, `is_deleted`, created_at,
        updated_at
    </sql>

    <sql id="values_exclude_id">
        #{tenantId}, #{roleId}, #{permissionId}, #{extraJson}, #{createdBy}, #{options}, #{isDeleted}, now(), now()
    </sql>

    <sql id="criteria">
        <where>
            <if test="tenantId != null">AND `tenant_id` = #{tenantId}</if>
            <if test="roleId != null">AND `role_id` = #{roleId}</if>
            <if test="permissionId != null">AND `permission_id` = #{permissionId}</if>
            <if test="extraJson != null">AND `extra_json` = #{extraJson}</if>
            <if test="createdBy != null">AND `created_by` = #{createdBy}</if>
            <if test="options != null">AND `options` = #{options}</if>
            <if test="isDeleted != null">AND `is_deleted` = #{isDeleted}</if>
            <if test="createdAt != null">AND <![CDATA[created_at >= #{createdAt}]]> </if>
            <if test="updatedAt != null">AND <![CDATA[updated_at < #{updatedAt}]]> </if>
        </where>
    </sql>

    <insert id="create" parameterType="RolePermission" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO
        <include refid="table_name"/>
        (<include refid="columns_exclude_id"/>)
        VALUES
        (<include refid="values_exclude_id"/>)
    </insert>

    <insert id="creates" parameterType="RolePermission" useGeneratedKeys="true">
        INSERT INTO
        <include refid="table_name"/>
        (<include refid="columns_exclude_id"/>)
        VALUES
        <foreach collection="list" item="i" index="index" separator=",">
            (#{i.tenantId}, #{i.roleId}, #{i.permissionId}, #{i.extraJson}, #{i.createdBy}, #{i.options},
            #{i.isDeleted}, now(), now())
        </foreach>
    </insert>

    <select id="findById" parameterType="long" resultMap="RolePermissionMap">
        SELECT
        <include refid="columns_all"/>
        FROM
        <include refid="table_name"/>
        WHERE id = #{id} LIMIT 1
    </select>

    <select id="findByIds" parameterType="list" resultMap="RolePermissionMap">
        SELECT
        <include refid="columns_all"/>
        FROM
        <include refid="table_name"/>
        WHERE id IN
        <foreach item="id" collection="list" open="(" separator="," close=")">
            #{id}
        </foreach>
    </select>

    <update id="update" parameterType="RolePermission">
        UPDATE
        <include refid="table_name"/>
        <set>
            <if test="tenantId != null">`tenant_id` = #{tenantId},</if>
            <if test="roleId != null">`role_id` = #{roleId},</if>
            <if test="permissionId != null">`permission_id` = #{permissionId},</if>
            <if test="extraJson != null">`extra_json` = #{extraJson},</if>
            <if test="createdBy != null">`created_by` = #{createdBy},</if>
            <if test="options != null">`options` = #{options},</if>
            <if test="isDeleted != null">`is_deleted` = #{isDeleted},</if>
            updated_at = now()
        </set>
        WHERE id = #{id}
    </update>

    <!--<delete id="delete" parameterType="long">-->
        <!--DELETE FROM-->
        <!--<include refid="table_name"/>-->
        <!--WHERE id = #{id}-->
    <!--</delete>-->

    <select id="count" parameterType="map" resultType="long">
        SELECT COUNT(1)
        FROM
        <include refid="table_name"/>
        <include refid="criteria"/>
    </select>

    <select id="paging" parameterType="map" resultMap="RolePermissionMap">
        SELECT
        <include refid="columns_all"/>
        FROM
        <include refid="table_name"/>
        <include refid="criteria"/>
        ORDER BY `id` DESC
        LIMIT #{offset}, #{limit}
    </select>

    <select id="list" parameterType="map" resultMap="RolePermissionMap">
        SELECT
        <include refid="columns_all"/>
        FROM
        <include refid="table_name"/>
        <include refid="criteria"/>
        ORDER BY `id` DESC
    </select>

    <select id="findByPermissionId" parameterType="long" resultMap="RolePermissionMap">
        SELECT
        <include refid="columns_all"/>
        FROM
        <include refid="table_name"/>
        WHERE permission_id = #{permissionId}
    </select>

    <select id="findByRoleId" parameterType="long" resultMap="RolePermissionMap">
        SELECT
        <include refid="columns_all"/>
        FROM
        <include refid="table_name"/>
        WHERE role_id = #{roleId}
    </select>

</mapper>
